name: NEW Deploy ADF Resources

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout adf_publish branch
        uses: actions/checkout@v3
        with:
          ref: adf_publish

      - name: Install Az PowerShell module
        run: Install-Module -Name Az.DataFactory -Scope CurrentUser -Repository PSGallery -Force
        shell: pwsh

      - name: Get source ADF name
        run: echo "SOURCE_ADF=${{ secrets.AZURE_DATA_FACTORY }}" >> $GITHUB_ENV
        
  deploy-qa:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: QA
      url: https://portal.azure.com/
    steps:
      # - name: Wait for QA Approval
      #  uses: hmarr/auto-approve-action@v2
      #  with:
      #    github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Azure
        uses: azure/login@v1
        with:       
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          
      - name: Verify PrePostDeploymentScript.Ver2.ps1 script exists
        run: ls -l PrePostDeploymentScript.Ver2.ps1

      - name: Run Pre-deployment script
        run: |
          ./PrePostDeploymentScript.Ver2.ps1 `
          -armTemplate "./${{ env.SOURCE_ADF }}/ARMTemplateForFactory.json" `
          -ResourceGroupName "${{ secrets.AZURE_RESOURCE_GROUP }}" `
          -DataFactoryName "${{ secrets.AZURE_DATA_FACTORY }}" `
          -predeployment $true `
          -deleteDeployment $false
        shell: pwsh

      - name: Deploy to QA
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP }}
          dataFactoryName: ${{ secrets.AZURE_DATA_FACTORY }}
          armTemplateFile: ./$SOURCE_ADF/ARMTemplateForFactory.json
          armTemplateParametersFile: ./$SOURCE_ADF/ARMTemplateParameters_QA.json
          mode: incremental

      - name: Run Post-deployment script
        run: |
          ./PrePostDeploymentScript.Ver2.ps1 `
          -armTemplate "./${{ env.SOURCE_ADF }}/ARMTemplateForFactory.json" `
          -ResourceGroupName "${{ secrets.AZURE_RESOURCE_GROUP }}" `
          -DataFactoryName "${{ secrets.AZURE_DATA_FACTORY }}" `
          -predeployment $false `
          -deleteDeployment $true
        shell: pwsh

  deploy-prod:
    needs: deploy-qa
    runs-on: ubuntu-latest
    environment:
      name: PRD
      url: https://portal.azure.com/
    steps:
      # - name: Wait for Prod Approval
      #  uses: hmarr/auto-approve-action@v2
      #  with:
      #    github-token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ExportedArmTemplate

      - name: Login to Azure
        uses: azure/login@v1
        with:       
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Install Az PowerShell module
        run: Install-Module -Name Az.DataFactory -Scope CurrentUser -Repository PSGallery -Force
        shell: pwsh

      - name: Run Pre-deployment script
        run: |
          ./PrePostDeploymentScript.Ver2.ps1 `
          -armTemplate "./${{ env.SOURCE_ADF }}/ARMTemplateForFactory.json" `
          -ResourceGroupName "${{ secrets.AZURE_RESOURCE_GROUP }}" `
          -DataFactoryName "${{ secrets.AZURE_DATA_FACTORY }}" `
          -predeployment $true `
          -deleteDeployment $false
        shell: pwsh
        
      - name: Deploy to Prod
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP }}
          dataFactoryName: ${{ secrets.AZURE_DATA_FACTORY }}
          armTemplateFile: ./$SOURCE_ADF/ARMTemplateForFactory.json
          armTemplateParametersFile: ./$SOURCE_ADF/ARMTemplateParameters_PRD.json
          mode: incremental
      
      - name: Run Post-deployment script
        run: |
          ./PrePostDeploymentScript.Ver2.ps1 `
          -armTemplate "./${{ env.SOURCE_ADF }}/ARMTemplateForFactory.json" `
          -ResourceGroupName "${{ secrets.AZURE_RESOURCE_GROUP }}" `
          -DataFactoryName "${{ secrets.AZURE_DATA_FACTORY }}" `
          -predeployment $false `
          -deleteDeployment $true
        shell: pwsh
