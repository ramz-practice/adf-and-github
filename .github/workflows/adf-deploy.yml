name: Deploy ADF Resources

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.upload.outputs.artifact-name }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version: '22.x'

      - name: Install ADF Utilities
        run: npm install
        working-directory: ${{github.workspace}}/build

      - name: Validate ADF Resources
        run: npm run build validate ${{github.workspace}} /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID_DEV }}/resourceGroups/${{ secrets.AZURE_RESOURCE_GROUP_DEV }}/providers/Microsoft.DataFactory/factories/${{ secrets.AZURE_DATA_FACTORY_DEV }}
        working-directory: ${{github.workspace}}/build

      - name: Export ARM Template
        run: npm run build export ${{github.workspace}} /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID_DEV }}/resourceGroups/${{ secrets.AZURE_RESOURCE_GROUP_DEV }}/providers/Microsoft.DataFactory/factories/${{ secrets.AZURE_DATA_FACTORY_DEV }} ExportedArmTemplate
        working-directory: ${{github.workspace}}/build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ExportedArmTemplate
          path: ${{github.workspace}}/build/ExportedArmTemplate

  deploy-qa:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: QA
      url: https://portal.azure.com/
    steps:
      - name: Wait for QA Approval
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ExportedArmTemplate

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_QA }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET_QA }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_QA }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}          
          enable-AzPSSession: true

      - name: Install Az PowerShell module
        run: Install-Module -Name Az.DataFactory -Scope CurrentUser -Repository PSGallery -Force
        shell: pwsh

      - name: Run Pre-deployment script
        uses: azure/powershell@v1.4.0
        run: |
          ${{github.workspace}}/PrePostDeploymentScript.ps1 `
            -armTemplate "ExportedArmTemplate/ARMTemplateForFactory.json" `
            -ResourceGroupName "${{ secrets.AZURE_RESOURCE_GROUP_QA }}" `
            -DataFactoryName "${{ secrets.AZURE_DATA_FACTORY_QA }}" `
            -predeployment $true `
            -deleteDeployment $false
        shell: pwsh

      - name: Deploy to QA
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP_QA }}
          dataFactoryName: ${{ secrets.AZURE_DATA_FACTORY_QA }}
          armTemplateFile: ExportedArmTemplate/ARMTemplateForFactory.json
          armTemplateParametersFile: ExportedArmTemplate/ARMTemplateParameters_QA.json

      - name: Run Post-deployment script
        run: |
          ${{github.workspace}}/PrePostDeploymentScript.ps1 `
            -armTemplate "ExportedArmTemplate/ARMTemplateForFactory.json" `
            -ResourceGroupName "${{ secrets.AZURE_RESOURCE_GROUP_QA }}" `
            -DataFactoryName "${{ secrets.AZURE_DATA_FACTORY_QA }}" `
            -predeployment $false `
            -deleteDeployment $true
        shell: pwsh

  deploy-prod:
    needs: deploy-qa
    runs-on: ubuntu-latest
    environment:
      name: Prod
      url: https://portal.azure.com/
    steps:
      - name: Wait for Prod Approval
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ExportedArmTemplate

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_PRD }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET_PRD }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_PRD }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          enable-AzPSSession: true

      - name: Install Az PowerShell module
        run: Install-Module -Name Az.DataFactory -Scope CurrentUser -Repository PSGallery -Force
        shell: pwsh

      - name: Run Pre-deployment script
        run: |
          ${{github.workspace}}/PrePostDeploymentScript.ps1 `
            -armTemplate "ExportedArmTemplate/ARMTemplateForFactory.json" `
            -ResourceGroupName "${{ secrets.AZURE_RESOURCE_GROUP_PRD }}" `
            -DataFactoryName "${{ secrets.AZURE_DATA_FACTORY_PRD }}" `
            -predeployment $true `
            -deleteDeployment $false
        shell: pwsh
        
      - name: Deploy to Prod
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP_PRD }}
          dataFactoryName: ${{ secrets.AZURE_DATA_FACTORY_PRD }}
          armTemplateFile: ExportedArmTemplate/ARMTemplateForFactory.json
          armTemplateParametersFile: ExportedArmTemplate/ARMTemplateParameters_Prod.json
      
      - name: Run Post-deployment script
        run: |
          ${{ github.action_path }}/PrePostDeploymentScript.ps1 `
            -armTemplate "ExportedArmTemplate/ARMTemplateForFactory.json" `
            -ResourceGroupName "${{ secrets.AZURE_RESOURCE_GROUP_PRD }}" `
            -DataFactoryName "${{ secrets.AZURE_DATA_FACTORY_PRD }}" `
            -predeployment $false `
            -deleteDeployment $true
        shell: pwsh
